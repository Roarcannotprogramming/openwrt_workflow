name: BuildImage-x86-64-master
on: 
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 21 * * *"

jobs:
  build_passwall:
    name: Build Passwall
    runs-on: ubuntu-latest
    container: 
      image: openwrtorg/sdk:x86_64-master
      options: --user root
    defaults:
      run:
        shell: bash
    steps:
    # - uses: actions/checkout@v3
    - name: Run Make
      run: |
        export VOLUME_HOME=$(pwd)
        ### cp -r $VOLUME_HOME /home/build/openwrt_workflow 
        ### wget https://github.com/xiaorouji/openwrt-passwall/archive/3aff3af88536227d12fb7206992af64ff21cf4d2.zip -O /home/build/openwrt_workflow/openwrt-passwall-3aff3af88536227d12fb7206992af64ff21cf4d2.zip 
        ### cd /home/build/openwrt_workflow 
        ### unzip -o openwrt-passwall-3aff3af88536227d12fb7206992af64ff21cf4d2.zip
        ### chown -R build:build /home/build/openwrt_workflow 
        cd /home/build/openwrt 
        ### sudo -u build chmod +x /home/build/openwrt_workflow/build.sh 
        ### sudo -u build /home/build/openwrt_workflow/build.sh 
        sudo -u build echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> feeds.conf.default
        apt-get update
        apt-get install upx -y
        sudo -u build ln -s /usr/bin/upx staging_dir/host/bin/upx
        sudo -u build ln -s /usr/bin/upx-ucl staging_dir/host/bin/upx-ucl
        sudo -u build ./scripts/feeds update -a
        ### sudo -u build cp -r /home/build/openwrt_workflow/openwrt-passwall-3aff3af88536227d12fb7206992af64ff21cf4d2/luci-app-passwall/ /home/build/openwrt/feeds/passwall/
        # git clone https://github.com/xiaorouji/openwrt-passwall2.git $VOLUME_HOME/openwrt-passwall2
        git clone -b luci https://github.com/xiaorouji/openwrt-passwall.git $VOLUME_HOME/openwrt-passwall
        cp -r $VOLUME_HOME/openwrt-passwall/luci-app-passwall /home/build/openwrt/feeds/passwall/ 
        chown -R build:build /home/build/ 
        sudo -u build ./scripts/feeds update -a
        sudo -u build ./scripts/feeds install luci-app-passwall
        sudo -u build make defconfig
        sudo -u build make package/luci-app-passwall/compile V=99 -j $(nproc)
        cp -r bin/packages/x86_64/passwall $VOLUME_HOME
    - uses: actions/upload-artifact@v3
      with:
        name: passwall
        path: passwall 

  build_theme_argon:
    name: Build Argon 
    runs-on: ubuntu-latest
    container: 
      image: openwrtorg/sdk:x86_64-master
      options: --user root
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - name: Run Make
      run: |
        export VOLUME_HOME=$(pwd)
        cd /home/build/openwrt 
        sudo -u build git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
        sudo -u build ./scripts/feeds update -a
        sudo -u build make defconfig
        sudo -u build make package/luci-theme-argon/compile V=s -j1
        mkdir -p $VOLUME_HOME/luci-theme-argon
        cp bin/packages/x86_64/base/luci-theme-argon*.ipk $VOLUME_HOME/luci-theme-argon/ 
    - uses: actions/upload-artifact@v3
      with:
        name: luci-theme-argon
        path: luci-theme-argon 
  
  # luci app netdata has some bugs, so just not use it for now!
  build_luci_app_netdata:
    name: Build Luci App Netdata 
    runs-on: ubuntu-latest
    container: 
      image: openwrtorg/sdk:x86_64-master
      options: --user root
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - name: Run Make
      run: |
        export VOLUME_HOME=$(pwd)
        cd /home/build/openwrt 
        sudo -u build git clone https://github.com/sirpdboy/luci-app-netdata package/luci-app-netdata
        sudo -u build ./scripts/feeds update -a
        sudo -u build ./scripts/feeds install -a
        sudo -u build make defconfig
        sudo -u build make package/luci-app-netdata/compile V=s -j1
        mkdir -p $VOLUME_HOME/luci-app-netdata
        cp bin/packages/x86_64/base/luci-app-netdata*.ipk $VOLUME_HOME/luci-app-netdata/
    - uses: actions/upload-artifact@v3
      with:
        name: luci-app-netdata
        path: luci-app-netdata 

  build_image:
    name: Build Image
    needs: [build_passwall, build_theme_argon, build_luci_app_netdata]
    runs-on: ubuntu-latest
    container: 
      image: openwrtorg/imagebuilder:x86-64-master
      options: --user root
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: passwall
    - uses: actions/download-artifact@v3
      with:
        name: luci-theme-argon
    # - uses: actions/download-artifact@v3
    #   with:
    #     name: luci-app-netdata
    - name: Prepare Packages
      run: |
        export VOLUME_HOME=$(pwd)
        cd /home/build/openwrt
        cp -r $VOLUME_HOME packages
    - name: Debug Print
      run: |
        apt update
        apt install tree
        tree /home/build/openwrt/packages
    - name: Make Image
      run: |
        export VOLUME_HOME=$(pwd)
        cd /home/build/openwrt
        chown -R build:build packages
        sudo -u build sed -i "s/CONFIG_TARGET_ROOTFS_PARTSIZE=[0-9]\+/CONFIG_TARGET_ROOTFS_PARTSIZE=${{ env.rootfs_size }}/g;s/CONFIG_TARGET_KERNEL_PARTSIZE=[0-9]\+/CONFIG_TARGET_KERNEL_PARTSIZE=${{ env.kernel_size }}/g" .config
        sudo -u build make image PROFILE=${{ env.profile }} PACKAGES="${{ env.packages }}"
        mkdir -p $VOLUME_HOME/openwrt-x86-64-master
        cp bin/targets/x86/64/* $VOLUME_HOME/openwrt-x86-64-master/
       
      env:
        rootfs_size: 4096
        kernel_size: 256
        profile: generic
        packages: luci luci-app-qos luci-app-upnp luci-proto-ipv6 kmod-igc kmod-mt7921e open-vm-tools
                  luci-i18n-base-zh-cn netdata luci-app-ttyd ntpclient luci-app-ntpc pciutils
                  coreutils-timeout lm-sensors lm-sensors-detect fdisk shadow-useradd -dnsmasq
                  vim python3 python3-yaml sudo docker dockerd docker-compose ipset samba4-server  
                  openvpn-openssl luci-app-openvpn lsof kmod-usb-storage block-mount lsblk luci-app-samba4
                  tcpdump zstd tmux bash netcat
                  luci-theme-argon
                  chinadns-ng dns2socks dns2tcp luci-app-passwall luci-i18n-passwall-zh-cn microsocks
                  shadowsocksr-libev-ssr-check shadowsocksr-libev-ssr-local shadowsocksr-libev-ssr-nat
                  shadowsocksr-libev-ssr-redir shadowsocksr-libev-ssr-server simple-obfs-server simple-obfs
                  tcping trojan-plus v2ray-core v2ray-example v2ray-extra v2ray-plugin 
    - uses: actions/upload-artifact@v3
      with:
          name: openwrt
          path: openwrt-x86-64-master
